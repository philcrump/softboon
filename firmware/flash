#!/usr/bin/env bash

source_dir="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)"
cd "$source_dir"

COLOUR_GREEN='\033[0;32m'
COLOUR_YELLOW='\033[1;33m'
COLOUR_PURPLE='\033[0;35m'
COLOUR_RED='\033[0;31m'
COLOUR_OFF='\033[0;00m'
CLEAR_LINE='\033[2K'

_ERROR_="${COLOUR_RED}[ERROR]${COLOUR_OFF}"
_INFO_="${COLOUR_PURPLE}[INFO]${COLOUR_OFF}"
_DEBUG_="${COLOUR_YELLOW}[DEBUG]${COLOUR_OFF}"

programmer_power="enable"
binary="target/thumbv6m-none-eabi/release/softboon"

locate_black_magic() {
  probe="`ls 2>/dev/null -Ub1 -- /dev/serial/by-id/usb-Black_Magic_Debug_Black_Magic_Probe_*-if00 | head -n 1`";
  if ! [ -z "$probe" ];
  then
    echo "$probe";
    return 0;
  fi
  return 1;
}

flash_target() {
	flash_cmd="arm-none-eabi-gdb -q --batch \
	    -ex 'file '$binary                          \
	    -ex 'target extended-remote '$programmer    \
	    -ex 'monitor tpwr '$programmer_power        \
	    -ex 'monitor swdp_scan'                     \
	    -ex 'attach 1'                              \
	    -ex 'load '$binary                          \
	    -ex 'compare-sections'";

   flash_out=`eval $flash_cmd 2>&1`;
   echo ${flash_out}
  echo ${flash_out} | grep -vqE 'warning|fail|Error|MIS-MATCHED|"monitor" command not supported by this target';
  if [[ $? -eq 0 ]]; then
    printf "${flash_out}\n"
    return 0;
  else
    printf "${flash_out}\n"
    return 1;
  fi
}

if programmer="`locate_black_magic`";
then
  printf "$_INFO_ Black Magic Probe found. Flashing..\n";
	flash_target \
  && {
    printf "$_INFO_$COLOUR_GREEN Device Flash successful$COLOUR_OFF\n"
    if $opt_sound; then playsound tools/flash.wav; fi
  } || {
    printf "$_ERROR_$COLOUR_RED Device Flash Failed$COLOUR_OFF\n" \
    && exit 1
  }
else
  printf "$_INFO_ ${COLOUR_YELLOW}Black Magic Probe not found.\n";
fi
